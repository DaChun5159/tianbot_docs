import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"use_guide/tianbot_mini/guide/chapter2.md","filePath":"use_guide/tianbot_mini/guide/chapter2.md"}');
const _sfc_main = { name: "use_guide/tianbot_mini/guide/chapter2.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><p style="${ssrRenderStyle({ "font-size": "30px", "font-weight": "bolder", "text-align": "center" })}">ROS基础功能</p><h2 id="快速体验slam建图" tabindex="-1">快速体验slam建图 <a class="header-anchor" href="#快速体验slam建图" aria-label="Permalink to &quot;快速体验slam建图&quot;">​</a></h2><p>可以在终端中输入下面的命令，运行slam建图</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">demo_slam.launch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="逐个体验单项功能" tabindex="-1">逐个体验单项功能 <a class="header-anchor" href="#逐个体验单项功能" aria-label="Permalink to &quot;逐个体验单项功能&quot;">​</a></h2><h3 id="驱动底盘及传感器" tabindex="-1">驱动底盘及传感器 <a class="header-anchor" href="#驱动底盘及传感器" aria-label="Permalink to &quot;驱动底盘及传感器&quot;">​</a></h3><p>Tinabot mini（编码器+IMU）</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">bringup.launch</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">rostopic</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">echo</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">/tianbot_mini/odom</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">                     </span><span style="${ssrRenderStyle({ "color": "#676E95", "font-style": "italic" })}"># 查看里程计数据</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="激光雷达" tabindex="-1">激光雷达 <a class="header-anchor" href="#激光雷达" aria-label="Permalink to &quot;激光雷达&quot;">​</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">lidar.launch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}">          </span><span style="${ssrRenderStyle({ "color": "#676E95", "font-style": "italic" })}"># 单独驱动激光雷达</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h2 id="如何控制底盘运动" tabindex="-1">如何控制底盘运动 <a class="header-anchor" href="#如何控制底盘运动" aria-label="Permalink to &quot;如何控制底盘运动&quot;">​</a></h2><h3 id="网页遥控" tabindex="-1">网页遥控 <a class="header-anchor" href="#网页遥控" aria-label="Permalink to &quot;网页遥控&quot;">​</a></h3><p>迷你机器人开机后使用电脑/手机等连接到TBMINI-XXXX热点后，可以打开浏览器访问<a href="http://tianbot_mini.local/joystick" target="_blank" rel="noreferrer">tianbot_mini.local/joystick</a>进行遥控控制，点击按键切换不同模式。</p><ul><li>智能模式（ROS），默认是这个模式，系统状态指示灯为绿色，此模式我们可以控制小车移动建图，如果上位机未运行ROS节点，此模式下网页控制小车移动会卡顿；</li><li>遥控模式（WEB），系统状态指示灯变为白色，此模式相当于遥控小车，我们可以拖动摇杆控制机器人运动。</li></ul><p>通用遥控页面：<a href="http://tianbot_mini.local/joystick" target="_blank" rel="noreferrer">tianbot_mini.local/joystick</a></p><h3 id="ros-topic通信" tabindex="-1">ROS Topic通信 <a class="header-anchor" href="#ros-topic通信" aria-label="Permalink to &quot;ROS Topic通信&quot;">​</a></h3><p>运算平台通过串口与下位机进行通信</p><p><strong>终端话题发布</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">rostopic</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">pub</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">/tianbot_mini/cmd_vel</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">geometry_msgs/Twist</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&quot;</span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">linear:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">  x: 0.1</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">  y: 0.0</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">  z: 0.0</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">angular:</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">  x: 0.0</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">  y: 0.0</span></span>
<span class="line"><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">  z: 0.0</span><span style="${ssrRenderStyle({ "color": "#89DDFF" })}">&quot;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><p>对于主要在二维空间（xoy平面）内运动的平台，可以使用geometry_msgs/Twist消息类型，可以通过</p><ul><li>linear.x控制前后</li><li>angular.z控制旋转</li></ul><p><strong>键盘控制</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">teleop.launch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p><strong>rqt发布</strong></p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">rosrun</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">rqt_publisher</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">rqt_publisher</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("use_guide/tianbot_mini/guide/chapter2.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const chapter2 = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  chapter2 as default
};
