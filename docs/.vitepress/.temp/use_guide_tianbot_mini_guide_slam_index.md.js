import { ssrRenderAttrs, ssrRenderStyle } from "vue/server-renderer";
import { useSSRContext } from "vue";
import { _ as _export_sfc } from "./plugin-vue_export-helper.cc2b3d55.js";
const __pageData = JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"use_guide/tianbot_mini/guide/slam/index.md","filePath":"use_guide/tianbot_mini/guide/slam/index.md"}');
const _sfc_main = { name: "use_guide/tianbot_mini/guide/slam/index.md" };
function _sfc_ssrRender(_ctx, _push, _parent, _attrs, $props, $setup, $data, $options) {
  _push(`<div${ssrRenderAttrs(_attrs)}><p style="${ssrRenderStyle({ "font-size": "30px", "font-weight": "bolder", "text-align": "center" })}">SLAM快速体验</p><h2 id="slam介绍" tabindex="-1">SLAM介绍 <a class="header-anchor" href="#slam介绍" aria-label="Permalink to &quot;SLAM介绍&quot;">​</a></h2><p>SLAM (Simultaneous Localization And Mapping，同步定位与地图构建)主要为了解决移动机器人在未知环境运行时定位与地图构建的问题。SLAM 并不是某一种特定的算法，而是一个概念。</p><p>常见算法以下：</p><ul><li><p>2D：Gmapping、hectorSLAM、Cartographer(2D/3D)</p></li><li><p>3D:LOAM、LeGO-LOAM</p></li><li><p>视觉：VINS-FUNSION、ORB3-SLAM</p></li></ul><p>本章节主要阐述2D的Gmapping、hectorSLAM、Cartographer</p><p>机器人导航三大步骤：1.定位 2.建图 3.路径规划导航，SLAM解决前两个步骤，也就是建图和定位。</p><p>我在什么地方？——定位。</p><p>周围环境是什么样？——建图。</p><p>当你闭上眼睛，处于一个陌生环境，你会怎么走动呢？你需要用手去感受环境，得到周围环境的感官认识。也就是机器人运用各种传感器（激光雷达，深度相机等）构建地图，你在走动的过程中不断整合新的环境信息判断这个地方是否来过，这就需要感知身处何处，也就是机器人的定位。</p><h2 id="快速体验slam" tabindex="-1">快速体验SLAM <a class="header-anchor" href="#快速体验slam" aria-label="Permalink to &quot;快速体验SLAM&quot;">​</a></h2><p>按照快速启动所介绍的那样，让Tianbot_mini与电脑连接后 运行</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">demo_slam.launch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>或者分布进行</p><p>打开终端输入以下命令：运行迷你机器人驱动</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">bringup.launch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>打开新终端输入以下命令：运行雷达驱动</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">lidar.launch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>打开新终端输入以下命令：运行SLAM</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">slam.launch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>打开新终端输入以下命令：运行键盘遥控</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="${ssrRenderStyle({ "color": "#FFCB6B" })}">roslaunch</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">tianbot_mini</span><span style="${ssrRenderStyle({ "color": "#A6ACCD" })}"> </span><span style="${ssrRenderStyle({ "color": "#C3E88D" })}">teleop.launch</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>首先启用键盘控制节点控制Tianbot_mini移动完成对周围环境的建图，使用<code>Rviz</code>中粉红色的<code>2D Nav Goal</code>选一个点让mini移动到目标点处。</p><p><img src="https://img.kancloud.cn/d8/2b/d82b960b33a6db0ce5e5e1354fcd4941_1920x1080.png" alt=""></p></div>`);
}
const _sfc_setup = _sfc_main.setup;
_sfc_main.setup = (props, ctx) => {
  const ssrContext = useSSRContext();
  (ssrContext.modules || (ssrContext.modules = /* @__PURE__ */ new Set())).add("use_guide/tianbot_mini/guide/slam/index.md");
  return _sfc_setup ? _sfc_setup(props, ctx) : void 0;
};
const index = /* @__PURE__ */ _export_sfc(_sfc_main, [["ssrRender", _sfc_ssrRender]]);
export {
  __pageData,
  index as default
};
